/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package hotelmanagementsystem;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.lang.System.Logger;
import java.lang.System.Logger.Level;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author Asus
 */
public class Homepage extends javax.swing.JFrame {

    /**
     * Creates new form Homepage
     */
    public Homepage() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        genderBg = new javax.swing.ButtonGroup();
        portalPnl = new javax.swing.JPanel();
        manageBtn = new javax.swing.JButton();
        customercheckinBtn = new javax.swing.JButton();
        customercheckoutBtn = new javax.swing.JButton();
        customerdetsBtn = new javax.swing.JButton();
        exitBtn = new javax.swing.JButton();
        mainmenuLbl = new javax.swing.JLabel();
        TabbedPane = new javax.swing.JTabbedPane();
        managePnl = new javax.swing.JPanel();
        manageLbl = new javax.swing.JLabel();
        roomtableSp = new javax.swing.JScrollPane();
        roomtable = new javax.swing.JTable();
        searchbypriceLbl = new javax.swing.JLabel();
        roomsearchFld = new javax.swing.JTextField();
        roomsearchBtnbyprice = new javax.swing.JButton();
        checkinPnl = new javax.swing.JPanel();
        checkinLbl = new javax.swing.JLabel();
        checkinnameLbll = new javax.swing.JLabel();
        checkinnameFld = new javax.swing.JTextField();
        checkinmobnumLbl = new javax.swing.JLabel();
        checkinmobnumFld = new javax.swing.JTextField();
        checkinnationalityLbl = new javax.swing.JLabel();
        checkinnationalityFld = new javax.swing.JTextField();
        checkingenderLbl = new javax.swing.JLabel();
        checkinemailLbl = new javax.swing.JLabel();
        checkinemailFld = new javax.swing.JTextField();
        checkinaddrLbl = new javax.swing.JLabel();
        checkinaddrFld = new javax.swing.JTextField();
        checkinbedLbl = new javax.swing.JLabel();
        checkinbedCb = new javax.swing.JComboBox<>();
        checkinDateLbl = new javax.swing.JLabel();
        checkinDateFld = new javax.swing.JTextField();
        checkinIDLbl = new javax.swing.JLabel();
        checkinIDFld = new javax.swing.JTextField();
        checkinroomLbl = new javax.swing.JLabel();
        checkinroomCb = new javax.swing.JComboBox<>();
        checkinroomnumLbl = new javax.swing.JLabel();
        checkinroomnumCb = new javax.swing.JComboBox<>();
        checkinpriceLbl = new javax.swing.JLabel();
        checkinpriceFld = new javax.swing.JTextField();
        alloteroomBtn = new javax.swing.JButton();
        checkinclearBtn = new javax.swing.JButton();
        maleRb = new javax.swing.JRadioButton();
        femaleRb = new javax.swing.JRadioButton();
        otherRb = new javax.swing.JRadioButton();
        checkoutPnl = new javax.swing.JPanel();
        checkoutLbl = new javax.swing.JLabel();
        checkoutroomnumLbl = new javax.swing.JLabel();
        checkoutroomnumFld = new javax.swing.JTextField();
        roomsearchBtnbynumber = new javax.swing.JButton();
        checkinTblSp = new javax.swing.JScrollPane();
        checkinTbl = new javax.swing.JTable();
        checkoutcustomernameLbl = new javax.swing.JLabel();
        checkoutcustomernameFld = new javax.swing.JTextField();
        checkindateLbl = new javax.swing.JLabel();
        checkindateFld = new javax.swing.JTextField();
        checkoutDateLbl = new javax.swing.JLabel();
        checkoutDateFld = new javax.swing.JTextField();
        checkoutmobnumLbl = new javax.swing.JLabel();
        checkoutmobnumFld = new javax.swing.JTextField();
        priceperdayLbl = new javax.swing.JLabel();
        priceperdayFld = new javax.swing.JTextField();
        daysstayedLbl = new javax.swing.JLabel();
        daysstayedFld = new javax.swing.JTextField();
        totalamountLbl = new javax.swing.JLabel();
        totalamountFld = new javax.swing.JTextField();
        emailLbl = new javax.swing.JLabel();
        emailFld = new javax.swing.JTextField();
        checkoutBtn = new javax.swing.JButton();
        clearBtn = new javax.swing.JButton();
        customerPnl = new javax.swing.JPanel();
        customerdetLbl = new javax.swing.JLabel();
        searchbycheckoutdateLbl = new javax.swing.JLabel();
        searchbycheckoutdateFld = new javax.swing.JTextField();
        searchcustomerBtn = new javax.swing.JButton();
        custoomerdetailTableSp = new javax.swing.JScrollPane();
        customerdetailTbl = new javax.swing.JTable();
        menubar = new javax.swing.JMenuBar();
        fileMn = new javax.swing.JMenu();
        openMn = new javax.swing.JMenu();
        roomdetailsMn = new javax.swing.JMenuItem();
        customerdetailsMn = new javax.swing.JMenuItem();
        exitMn = new javax.swing.JMenuItem();
        helpMn = new javax.swing.JMenu();
        aboutMn = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        portalPnl.setBackground(new java.awt.Color(204, 204, 204));

        manageBtn.setBackground(new java.awt.Color(204, 204, 204));
        manageBtn.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        manageBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/manage room.png"))); // NOI18N
        manageBtn.setText("Available Room");
        manageBtn.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        manageBtn.setOpaque(false);
        manageBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                manageBtnActionPerformed(evt);
            }
        });

        customercheckinBtn.setBackground(new java.awt.Color(204, 204, 204));
        customercheckinBtn.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        customercheckinBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/Customer Registration & Check IN.png"))); // NOI18N
        customercheckinBtn.setText("Customer Check In");
        customercheckinBtn.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        customercheckinBtn.setOpaque(false);
        customercheckinBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                customercheckinBtnActionPerformed(evt);
            }
        });

        customercheckoutBtn.setBackground(new java.awt.Color(204, 204, 204));
        customercheckoutBtn.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        customercheckoutBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/Customer Check Out.png"))); // NOI18N
        customercheckoutBtn.setText("Customer Check Out");
        customercheckoutBtn.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        customercheckoutBtn.setOpaque(false);
        customercheckoutBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                customercheckoutBtnActionPerformed(evt);
            }
        });

        customerdetsBtn.setBackground(new java.awt.Color(204, 204, 204));
        customerdetsBtn.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        customerdetsBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/Customer Details Bill.png"))); // NOI18N
        customerdetsBtn.setText("Customer Details");
        customerdetsBtn.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        customerdetsBtn.setOpaque(false);
        customerdetsBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                customerdetsBtnActionPerformed(evt);
            }
        });

        exitBtn.setBackground(new java.awt.Color(204, 204, 204));
        exitBtn.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        exitBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/exit.png"))); // NOI18N
        exitBtn.setText("Exit");
        exitBtn.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        exitBtn.setOpaque(false);
        exitBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitBtnActionPerformed(evt);
            }
        });

        mainmenuLbl.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        mainmenuLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        mainmenuLbl.setText("Main Menu");

        javax.swing.GroupLayout portalPnlLayout = new javax.swing.GroupLayout(portalPnl);
        portalPnl.setLayout(portalPnlLayout);
        portalPnlLayout.setHorizontalGroup(
            portalPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(portalPnlLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(mainmenuLbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, portalPnlLayout.createSequentialGroup()
                .addGap(0, 20, Short.MAX_VALUE)
                .addGroup(portalPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(exitBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(customercheckinBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(customerdetsBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(manageBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(customercheckoutBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
        portalPnlLayout.setVerticalGroup(
            portalPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, portalPnlLayout.createSequentialGroup()
                .addContainerGap(188, Short.MAX_VALUE)
                .addComponent(mainmenuLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(manageBtn)
                .addGap(18, 18, 18)
                .addComponent(customercheckinBtn)
                .addGap(18, 18, 18)
                .addComponent(customercheckoutBtn)
                .addGap(18, 18, 18)
                .addComponent(customerdetsBtn)
                .addGap(18, 18, 18)
                .addComponent(exitBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(214, 214, 214))
        );

        getContentPane().add(portalPnl, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, -27, 350, 830));

        TabbedPane.setBackground(new java.awt.Color(204, 204, 204));

        managePnl.setBackground(new java.awt.Color(204, 204, 204));
        managePnl.setMinimumSize(new java.awt.Dimension(1270, 600));
        managePnl.setRequestFocusEnabled(false);

        manageLbl.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        manageLbl.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/manage room.png"))); // NOI18N
        manageLbl.setText("Available Room");

        roomtable.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        roomtable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Room Number", "Room Type", "Bed", "Price per day (Rs)", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        roomtable.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        roomtable.getTableHeader().setReorderingAllowed(false);
        roomtableSp.setViewportView(roomtable);
        if (roomtable.getColumnModel().getColumnCount() > 0) {
            roomtable.getColumnModel().getColumn(0).setResizable(false);
            roomtable.getColumnModel().getColumn(1).setResizable(false);
            roomtable.getColumnModel().getColumn(2).setResizable(false);
            roomtable.getColumnModel().getColumn(3).setResizable(false);
            roomtable.getColumnModel().getColumn(4).setResizable(false);
        }

        searchbypriceLbl.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        searchbypriceLbl.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        searchbypriceLbl.setText("Search by Price");
        searchbypriceLbl.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        searchbypriceLbl.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

        roomsearchFld.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        roomsearchBtnbyprice.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        roomsearchBtnbyprice.setText("Search");
        roomsearchBtnbyprice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                roomsearchBtnbypriceActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout managePnlLayout = new javax.swing.GroupLayout(managePnl);
        managePnl.setLayout(managePnlLayout);
        managePnlLayout.setHorizontalGroup(
            managePnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(managePnlLayout.createSequentialGroup()
                .addGap(55, 55, 55)
                .addGroup(managePnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(managePnlLayout.createSequentialGroup()
                        .addComponent(roomtableSp, javax.swing.GroupLayout.PREFERRED_SIZE, 1197, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(33, Short.MAX_VALUE))
                    .addGroup(managePnlLayout.createSequentialGroup()
                        .addGroup(managePnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(managePnlLayout.createSequentialGroup()
                                .addComponent(searchbypriceLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(roomsearchFld, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(roomsearchBtnbyprice))
                            .addComponent(manageLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        managePnlLayout.setVerticalGroup(
            managePnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(managePnlLayout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addComponent(manageLbl)
                .addGap(52, 52, 52)
                .addGroup(managePnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE, false)
                    .addComponent(searchbypriceLbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(roomsearchFld)
                    .addComponent(roomsearchBtnbyprice))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 81, Short.MAX_VALUE)
                .addComponent(roomtableSp, javax.swing.GroupLayout.PREFERRED_SIZE, 534, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(47, 47, 47))
        );

        TabbedPane.addTab("Manage Room", managePnl);

        checkinPnl.setBackground(new java.awt.Color(204, 204, 204));

        checkinLbl.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        checkinLbl.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/Customer Registration & Check IN.png"))); // NOI18N
        checkinLbl.setText("Customer Check In");

        checkinnameLbll.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        checkinnameLbll.setText("Name");

        checkinnameFld.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        checkinmobnumLbl.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        checkinmobnumLbl.setText("Mobile Number");

        checkinmobnumFld.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        checkinnationalityLbl.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        checkinnationalityLbl.setText("Nationality");

        checkinnationalityFld.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        checkingenderLbl.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        checkingenderLbl.setText("Gender");

        checkinemailLbl.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        checkinemailLbl.setText("Email");

        checkinemailFld.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        checkinaddrLbl.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        checkinaddrLbl.setText("Address");

        checkinaddrFld.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        checkinbedLbl.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        checkinbedLbl.setText("Bed");

        checkinbedCb.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        checkinbedCb.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Single", "Double", "Triple" }));
        checkinbedCb.setEnabled(false);

        checkinDateLbl.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        checkinDateLbl.setText("Check In Date (DD-MM-YYYY)");

        checkinDateFld.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        checkinIDLbl.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        checkinIDLbl.setText("Id Proof");

        checkinIDFld.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        checkinroomLbl.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        checkinroomLbl.setText("Room Type");

        checkinroomCb.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        checkinroomCb.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "AC", "Non-AC" }));
        checkinroomCb.setEnabled(false);

        checkinroomnumLbl.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        checkinroomnumLbl.setText("Room Number");

        checkinroomnumCb.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        checkinroomnumCb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkinroomnumCbActionPerformed(evt);
            }
        });

        checkinpriceLbl.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        checkinpriceLbl.setText("Price");

        checkinpriceFld.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        checkinpriceFld.setEnabled(false);

        alloteroomBtn.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        alloteroomBtn.setText("Allote Room");
        alloteroomBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                alloteroomBtnActionPerformed(evt);
            }
        });

        checkinclearBtn.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        checkinclearBtn.setText("Clear");
        checkinclearBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkinclearBtnActionPerformed(evt);
            }
        });

        maleRb.setBackground(new java.awt.Color(204, 204, 204));
        genderBg.add(maleRb);
        maleRb.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        maleRb.setText("Male");

        femaleRb.setBackground(new java.awt.Color(204, 204, 204));
        genderBg.add(femaleRb);
        femaleRb.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        femaleRb.setText("Female");

        otherRb.setBackground(new java.awt.Color(204, 204, 204));
        genderBg.add(otherRb);
        otherRb.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        otherRb.setText("Other");

        javax.swing.GroupLayout checkinPnlLayout = new javax.swing.GroupLayout(checkinPnl);
        checkinPnl.setLayout(checkinPnlLayout);
        checkinPnlLayout.setHorizontalGroup(
            checkinPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(checkinPnlLayout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addGroup(checkinPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(checkinPnlLayout.createSequentialGroup()
                        .addGroup(checkinPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(checkinPnlLayout.createSequentialGroup()
                                .addComponent(checkinnameLbll, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(327, 327, 327)
                                .addComponent(checkinIDLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(checkinPnlLayout.createSequentialGroup()
                                .addComponent(checkinnameFld, javax.swing.GroupLayout.PREFERRED_SIZE, 351, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(37, 37, 37)
                                .addComponent(checkinIDFld, javax.swing.GroupLayout.PREFERRED_SIZE, 342, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(checkinPnlLayout.createSequentialGroup()
                                .addComponent(checkinmobnumLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(258, 258, 258)
                                .addComponent(checkinaddrLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(checkinPnlLayout.createSequentialGroup()
                                .addGroup(checkinPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(checkinmobnumFld, javax.swing.GroupLayout.PREFERRED_SIZE, 351, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(checkinnationalityLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(checkinnationalityFld, javax.swing.GroupLayout.PREFERRED_SIZE, 351, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(37, 37, 37)
                                .addGroup(checkinPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(checkinDateFld, javax.swing.GroupLayout.PREFERRED_SIZE, 342, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(checkinDateLbl)
                                    .addComponent(checkinaddrFld, javax.swing.GroupLayout.PREFERRED_SIZE, 342, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(checkinemailLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(checkingenderLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(checkinemailFld, javax.swing.GroupLayout.PREFERRED_SIZE, 351, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(checkinPnlLayout.createSequentialGroup()
                                .addComponent(maleRb)
                                .addGap(18, 18, 18)
                                .addComponent(femaleRb)
                                .addGap(18, 18, 18)
                                .addComponent(otherRb)))
                        .addGap(40, 40, 40)
                        .addGroup(checkinPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(checkinPnlLayout.createSequentialGroup()
                                .addComponent(alloteroomBtn)
                                .addGap(18, 18, 18)
                                .addComponent(checkinclearBtn))
                            .addComponent(checkinbedCb, javax.swing.GroupLayout.PREFERRED_SIZE, 358, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(checkinroomLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(checkinroomCb, javax.swing.GroupLayout.PREFERRED_SIZE, 358, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(checkinroomnumLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(checkinpriceLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(checkinpriceFld, javax.swing.GroupLayout.PREFERRED_SIZE, 358, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(checkinroomnumCb, javax.swing.GroupLayout.PREFERRED_SIZE, 358, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(checkinbedLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(checkinLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 307, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(103, Short.MAX_VALUE))
        );
        checkinPnlLayout.setVerticalGroup(
            checkinPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(checkinPnlLayout.createSequentialGroup()
                .addGroup(checkinPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(checkinPnlLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(checkinLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(93, 93, 93)
                        .addGroup(checkinPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(checkinnameLbll)
                            .addGroup(checkinPnlLayout.createSequentialGroup()
                                .addGap(9, 9, 9)
                                .addComponent(checkinIDLbl)))
                        .addGap(2, 2, 2)
                        .addGroup(checkinPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(checkinPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(checkinIDFld, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(checkinroomnumCb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(checkinPnlLayout.createSequentialGroup()
                                .addGap(1, 1, 1)
                                .addComponent(checkinnameFld, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(checkinPnlLayout.createSequentialGroup()
                        .addGap(162, 162, 162)
                        .addComponent(checkinroomnumLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(24, 24, 24)
                .addGroup(checkinPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(checkinroomLbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(checkinaddrLbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(checkinmobnumLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(checkinPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(checkinmobnumFld, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(checkinaddrFld, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(checkinroomCb, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(checkinPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(checkinnationalityLbl)
                    .addComponent(checkinDateLbl)
                    .addComponent(checkinbedLbl))
                .addGap(11, 11, 11)
                .addGroup(checkinPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(checkinnationalityFld, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(checkinPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(checkinDateFld, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(checkinbedCb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(29, 29, 29)
                .addGroup(checkinPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(checkingenderLbl)
                    .addComponent(checkinpriceLbl))
                .addGap(18, 18, 18)
                .addGroup(checkinPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(checkinpriceFld)
                    .addComponent(maleRb)
                    .addComponent(femaleRb)
                    .addComponent(otherRb))
                .addGap(18, 18, 18)
                .addComponent(checkinemailLbl)
                .addGap(22, 22, 22)
                .addGroup(checkinPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(checkinclearBtn)
                    .addComponent(alloteroomBtn)
                    .addComponent(checkinemailFld, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(249, 249, 249))
        );

        TabbedPane.addTab("Customer Check In", checkinPnl);

        checkoutPnl.setBackground(new java.awt.Color(204, 204, 204));

        checkoutLbl.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        checkoutLbl.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/Customer Check Out.png"))); // NOI18N
        checkoutLbl.setText("Customer Check Out");

        checkoutroomnumLbl.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        checkoutroomnumLbl.setText("Room Number");

        checkoutroomnumFld.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        checkoutroomnumFld.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                checkoutroomnumFldKeyTyped(evt);
            }
        });

        roomsearchBtnbynumber.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        roomsearchBtnbynumber.setText("Search");
        roomsearchBtnbynumber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                roomsearchBtnbynumberActionPerformed(evt);
            }
        });

        checkinTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Mobile Number", "Nationality", "Gender", "Email", "ID Proof", "Address", "Check In Date", "Room Number", "Bed Type", "Room Type", "Price Per Day"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        checkinTblSp.setViewportView(checkinTbl);

        checkoutcustomernameLbl.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        checkoutcustomernameLbl.setText(" Customer Name");

        checkoutcustomernameFld.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        checkindateLbl.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        checkindateLbl.setText("Check In Date(DD-MM-YYYY)");

        checkindateFld.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        checkoutDateLbl.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        checkoutDateLbl.setText("Check Out Date(DD-MM-YYYY)");

        checkoutDateFld.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        checkoutmobnumLbl.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        checkoutmobnumLbl.setText("Customer Mobile Number");

        checkoutmobnumFld.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        priceperdayLbl.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        priceperdayLbl.setText("Price(per day)");

        priceperdayFld.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        priceperdayFld.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                priceperdayFldKeyTyped(evt);
            }
        });

        daysstayedLbl.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        daysstayedLbl.setText("Number of day Stayed");

        daysstayedFld.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        totalamountLbl.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        totalamountLbl.setText("Total Amount Collect From Customer");

        totalamountFld.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        emailLbl.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        emailLbl.setText("Email");

        emailFld.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        checkoutBtn.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        checkoutBtn.setText("Check Out");
        checkoutBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkoutBtnActionPerformed(evt);
            }
        });

        clearBtn.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        clearBtn.setText("Clear");
        clearBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout checkoutPnlLayout = new javax.swing.GroupLayout(checkoutPnl);
        checkoutPnl.setLayout(checkoutPnlLayout);
        checkoutPnlLayout.setHorizontalGroup(
            checkoutPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(checkoutPnlLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(checkoutPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(checkinTblSp, javax.swing.GroupLayout.DEFAULT_SIZE, 1275, Short.MAX_VALUE)
                    .addGroup(checkoutPnlLayout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addGroup(checkoutPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(checkoutPnlLayout.createSequentialGroup()
                                .addGroup(checkoutPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, checkoutPnlLayout.createSequentialGroup()
                                        .addComponent(checkoutroomnumLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(checkoutroomnumFld, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(2, 2, 2))
                                    .addGroup(checkoutPnlLayout.createSequentialGroup()
                                        .addGroup(checkoutPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(checkoutcustomernameFld, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(checkoutcustomernameLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(priceperdayLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(priceperdayFld, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(36, 36, 36)
                                        .addGroup(checkoutPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(daysstayedFld, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(daysstayedLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(checkoutmobnumLbl)
                                            .addComponent(checkoutmobnumFld, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(36, 36, 36)))
                                .addGroup(checkoutPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(totalamountFld, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(checkoutPnlLayout.createSequentialGroup()
                                        .addComponent(totalamountLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(24, 24, 24)
                                        .addGroup(checkoutPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(emailFld, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(emailLbl)))
                                    .addGroup(checkoutPnlLayout.createSequentialGroup()
                                        .addGap(33, 33, 33)
                                        .addComponent(roomsearchBtnbynumber))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, checkoutPnlLayout.createSequentialGroup()
                                        .addGroup(checkoutPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(checkindateFld, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE)
                                            .addComponent(checkindateLbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addGap(38, 38, 38)
                                        .addGroup(checkoutPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(checkoutDateFld, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE)
                                            .addComponent(checkoutDateLbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addGap(10, 10, 10))))
                            .addComponent(checkoutLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 332, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(checkoutPnlLayout.createSequentialGroup()
                                .addComponent(checkoutBtn)
                                .addGap(18, 18, 18)
                                .addComponent(clearBtn)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        checkoutPnlLayout.setVerticalGroup(
            checkoutPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(checkoutPnlLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(checkoutLbl)
                .addGap(16, 16, 16)
                .addGroup(checkoutPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(checkoutroomnumLbl)
                    .addComponent(checkoutroomnumFld, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(roomsearchBtnbynumber))
                .addGap(27, 27, 27)
                .addGroup(checkoutPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(checkoutcustomernameLbl)
                    .addComponent(checkoutmobnumLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(checkindateLbl)
                    .addComponent(checkoutDateLbl))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(checkoutPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(checkoutcustomernameFld, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(checkoutDateFld, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(checkoutmobnumFld, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(checkindateFld, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(checkoutPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(daysstayedLbl)
                    .addComponent(emailLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(priceperdayLbl)
                    .addComponent(totalamountLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16)
                .addGroup(checkoutPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(priceperdayFld, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(daysstayedFld, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(totalamountFld, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(emailFld, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(41, 41, 41)
                .addGroup(checkoutPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(checkoutBtn)
                    .addComponent(clearBtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(checkinTblSp, javax.swing.GroupLayout.DEFAULT_SIZE, 444, Short.MAX_VALUE)
                .addContainerGap())
        );

        TabbedPane.addTab("Customer Check Out", checkoutPnl);

        customerPnl.setBackground(new java.awt.Color(204, 204, 204));

        customerdetLbl.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        customerdetLbl.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/Customer Details Bill.png"))); // NOI18N
        customerdetLbl.setText("Customer Details");

        searchbycheckoutdateLbl.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        searchbycheckoutdateLbl.setText("Search By :");

        searchbycheckoutdateFld.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        searchcustomerBtn.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        searchcustomerBtn.setText("Search");
        searchcustomerBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchcustomerBtnActionPerformed(evt);
            }
        });

        customerdetailTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Customer Name", "Mobile Number", "Room num", "Checkin Date", "Checkout Date", "Price per Day", "No. of days stayed", "Total payment ", "Contact email"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        customerdetailTbl.getTableHeader().setReorderingAllowed(false);
        custoomerdetailTableSp.setViewportView(customerdetailTbl);

        javax.swing.GroupLayout customerPnlLayout = new javax.swing.GroupLayout(customerPnl);
        customerPnl.setLayout(customerPnlLayout);
        customerPnlLayout.setHorizontalGroup(
            customerPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(customerPnlLayout.createSequentialGroup()
                .addGroup(customerPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(customerPnlLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(customerdetLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 268, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(customerPnlLayout.createSequentialGroup()
                        .addGap(373, 373, 373)
                        .addComponent(searchbycheckoutdateLbl)
                        .addGap(18, 18, 18)
                        .addComponent(searchbycheckoutdateFld, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(searchcustomerBtn)))
                .addGap(0, 469, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, customerPnlLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(custoomerdetailTableSp))
        );
        customerPnlLayout.setVerticalGroup(
            customerPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(customerPnlLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(customerdetLbl)
                .addGap(57, 57, 57)
                .addGroup(customerPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchbycheckoutdateLbl)
                    .addComponent(searchbycheckoutdateFld, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchcustomerBtn))
                .addGap(73, 73, 73)
                .addComponent(custoomerdetailTableSp, javax.swing.GroupLayout.PREFERRED_SIZE, 382, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(204, Short.MAX_VALUE))
        );

        TabbedPane.addTab("Customer Details", customerPnl);

        getContentPane().add(TabbedPane, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, -30, 1290, 830));

        fileMn.setText("File");

        openMn.setText("Open File");

        roomdetailsMn.setText("Open Room Details");
        roomdetailsMn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                roomdetailsMnActionPerformed(evt);
            }
        });
        openMn.add(roomdetailsMn);

        customerdetailsMn.setText("Open Customer Details");
        customerdetailsMn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                customerdetailsMnActionPerformed(evt);
            }
        });
        openMn.add(customerdetailsMn);

        fileMn.add(openMn);

        exitMn.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_X, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        exitMn.setText("Exit");
        exitMn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitMnActionPerformed(evt);
            }
        });
        fileMn.add(exitMn);

        menubar.add(fileMn);

        helpMn.setText("Help");

        aboutMn.setText("About");
        aboutMn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aboutMnActionPerformed(evt);
            }
        });
        helpMn.add(aboutMn);

        menubar.add(helpMn);

        setJMenuBar(menubar);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void exitBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitBtnActionPerformed
        // TODO add your handling code here:
        int a = JOptionPane.showConfirmDialog(null, "Do you want to exit application", "Select", JOptionPane.YES_NO_OPTION);
        if (a == 0) {
            System.exit(0);

        }
    }//GEN-LAST:event_exitBtnActionPerformed

    private void customerdetsBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_customerdetsBtnActionPerformed
        // TODO add your handling code here:
        TabbedPane.setSelectedIndex(3);
    }//GEN-LAST:event_customerdetsBtnActionPerformed

    private void customercheckoutBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_customercheckoutBtnActionPerformed
        // TODO add your handling code here:
        TabbedPane.setSelectedIndex(2);
    }//GEN-LAST:event_customercheckoutBtnActionPerformed

    private void customercheckinBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_customercheckinBtnActionPerformed
        // TODO add your handling code here:
        TabbedPane.setSelectedIndex(1);
        checkinroomnumCb.removeAllItems();
        refresh();
    }//GEN-LAST:event_customercheckinBtnActionPerformed

    private void manageBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_manageBtnActionPerformed
        // TODO add your handling code here:
        TabbedPane.setSelectedIndex(0);
    }//GEN-LAST:event_manageBtnActionPerformed

    private void checkinroomnumCbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkinroomnumCbActionPerformed
        // TODO add your handling code here:
        try {
            //checking roomnum
            int rowCount = roomtable.getRowCount();
            for (int i = 0; i < rowCount; i++) {
                String thisroomnum = (String) roomtable.getValueAt(i, 0);

                //setting room type
                if (checkinroomnumCb.getSelectedItem().equals(thisroomnum)) {
                    checkinroomCb.setSelectedItem(roomtable.getValueAt(i, 1));
                    checkinbedCb.setSelectedItem(roomtable.getValueAt(i, 2));
                    checkinpriceFld.setText(roomtable.getValueAt(i, 3).toString());

                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, "Refreshing, please wait");
        }
    }//GEN-LAST:event_checkinroomnumCbActionPerformed

    private void roomsearchBtnbypriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_roomsearchBtnbypriceActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) roomtable.getModel();
        TableRowSorter<DefaultTableModel> myTableRowSorter = new TableRowSorter<DefaultTableModel>(model);
        roomtable.setRowSorter(myTableRowSorter);
        String searchText = roomsearchFld.getText();
        myTableRowSorter.setRowFilter(RowFilter.regexFilter(searchText));
    }//GEN-LAST:event_roomsearchBtnbypriceActionPerformed

    private void roomdetailsMnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_roomdetailsMnActionPerformed
        // TODO add your handling code here:
        //change panel to room details panel
        TabbedPane.setSelectedIndex(0);
        //to choose file from pc
        roomdetails();

    }//GEN-LAST:event_roomdetailsMnActionPerformed

    private void checkinclearBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkinclearBtnActionPerformed
        // TODO add your handling code here:
        checkinnameFld.setText("");
        checkinmobnumFld.setText("");
        checkinnationalityFld.setText("");
        checkinemailFld.setText("");
        checkinIDFld.setText("");
        checkinaddrFld.setText("");
        checkinDateFld.setText("");
        genderBg.clearSelection();
        checkinroomnumCb.setSelectedIndex(0);
    }//GEN-LAST:event_checkinclearBtnActionPerformed

    private void alloteroomBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_alloteroomBtnActionPerformed
        // TODO add your handling code here:
        //check if any fields are empty
        if (checkinnameFld.getText().equals("") || checkinmobnumFld.getText().equals("") || checkinnationalityFld.getText().equals("") || checkinemailFld.getText().equals("") || checkinIDFld.getText().equals("") || checkinaddrFld.getText().equals("") || checkinDateFld.getText().equals("")) {
            //display error message
            JOptionPane.showMessageDialog(this, "Please fill data");
        } else {
            //storing necessary datas into variables and then into array
            String checkinname = checkinnameFld.getText();
            String checkinmobnum = checkinmobnumFld.getText();
            String checkinnationality = checkinnationalityFld.getText();
            String gender = getGender();
            String checkinemail = checkinemailFld.getText();
            String checkinID = checkinIDFld.getText();
            String checkinaddr = checkinaddrFld.getText();
            String checkinDate = checkinDateFld.getText();
            String checkinroomnum = checkinroomnumCb.getSelectedItem().toString();
            String checkinbed = checkinbedCb.getSelectedItem().toString();
            String checkinroom = checkinroomCb.getSelectedItem().toString();
            String checkinprice = checkinpriceFld.getText();

            //checking duplicate data
            int rowCount = checkinTbl.getRowCount();
            if (rowCount >= 1) {
                for (int i = 0; i < rowCount; i++) {
                    String thisroomnum = (String) checkinTbl.getValueAt(i, 8);

                    if (thisroomnum.equals(checkinroomnum)) {
                        JOptionPane.showMessageDialog(rootPane, "Room not available");
                        return;
                    }
                }
            }
            //storing data into array
            String[] data = {checkinname, checkinmobnum, checkinnationality, gender, checkinemail, checkinID, checkinaddr, checkinDate, checkinroomnum, checkinbed, checkinroom, checkinprice};

            //adding data to table
            DefaultTableModel tableModel = (DefaultTableModel) checkinTbl.getModel();
            tableModel.addRow(data);

            //changing availability
            int rowcount = roomtable.getRowCount();
            String s = "Not Available";
            for (int i = 0; i < rowcount; i++) {
                String updateroomnum = (String) roomtable.getValueAt(i, 0);

                if (updateroomnum.equals(checkinroomnum)) {
                    roomtable.setValueAt((Object) s, i, 4);
                }
            }
        }
        checkinroomnumCb.removeAllItems();
        refresh();
    }//GEN-LAST:event_alloteroomBtnActionPerformed

    private void exitMnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitMnActionPerformed
        // TODO add your handling code here:
        int a = JOptionPane.showConfirmDialog(null, "Do you want to exit application", "Select", JOptionPane.YES_NO_OPTION);
        if (a == 0) {
            System.exit(0);
        }
    }//GEN-LAST:event_exitMnActionPerformed

    private void customerdetailsMnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_customerdetailsMnActionPerformed
        // TODO add your handling code here:
        TabbedPane.setSelectedIndex(3);
        //to choose file from pc
       
    }//GEN-LAST:event_customerdetailsMnActionPerformed

    private void roomsearchBtnbynumberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_roomsearchBtnbynumberActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) checkinTbl.getModel();
        TableRowSorter<DefaultTableModel> myTableRowSorter = new TableRowSorter<DefaultTableModel>(model);
        checkinTbl.setRowSorter(myTableRowSorter);
        String searchText = checkoutroomnumFld.getText();
        myTableRowSorter.setRowFilter(RowFilter.regexFilter(searchText));
    }//GEN-LAST:event_roomsearchBtnbynumberActionPerformed

    private void searchcustomerBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchcustomerBtnActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) customerdetailTbl.getModel();
        TableRowSorter<DefaultTableModel> myTableRowSorter = new TableRowSorter<DefaultTableModel>(model);
        customerdetailTbl.setRowSorter(myTableRowSorter);
        String searchText = searchbycheckoutdateFld.getText();
        myTableRowSorter.setRowFilter(RowFilter.regexFilter(searchText));
    }//GEN-LAST:event_searchcustomerBtnActionPerformed

    private void clearBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearBtnActionPerformed
        // TODO add your handling code here:
        checkoutcustomernameFld.setText("");
        checkoutmobnumFld.setText("");
        checkindateFld.setText("");
        checkoutDateFld.setText("");
        priceperdayFld.setText("");
        daysstayedFld.setText("");
        totalamountFld.setText("");
        emailFld.setText("");
    }//GEN-LAST:event_clearBtnActionPerformed

    private void checkoutBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkoutBtnActionPerformed
        // TODO add your handling code here:
        //check if any fields are empty
        if (checkoutcustomernameFld.getText().equals("") || checkoutmobnumFld.getText().equals("") || checkindateFld.getText().equals("") || checkoutDateFld.getText().equals("") || priceperdayFld.getText().equals("") || daysstayedFld.getText().equals("") || totalamountFld.getText().equals("") || emailFld.getText().equals("") || checkoutroomnumFld.getText().equals("")){
            //display error message
            JOptionPane.showMessageDialog(this, "Please fill data");
        } else {
            //storing necessary datas into variables and then into array
        
        String customername = checkoutcustomernameFld.getText();
        String checkoutmobnum = checkoutmobnumFld.getText();
        String roomnum = checkoutroomnumFld.getText();
        String checkindate = checkindateFld.getText();
        String checkoutDate = checkoutDateFld.getText();
        String priceperday = priceperdayFld.getText();
        String daysstayed = daysstayedFld.getText();
        String totalamount = totalamountFld.getText();
        String email = emailFld.getText();

            //storing data into array
            String[] data = {customername, checkoutmobnum, roomnum, checkindate, checkoutDate, priceperday, daysstayed, totalamount, email};

            //adding data to table
            DefaultTableModel tableModel = (DefaultTableModel) customerdetailTbl.getModel();
            tableModel.addRow(data);

            //changing availability
            int rowcount = roomtable.getRowCount();
            String s = "Available";
            for (int i = 0; i < rowcount; i++) {
                String updateroomnum = (String) roomtable.getValueAt(i, 0);

                if (updateroomnum.equals(roomnum)) {
                    roomtable.setValueAt((Object) s, i, 4);
                }
            }
        }
        checkinroomnumCb.removeAllItems();
        refresh();
    }//GEN-LAST:event_checkoutBtnActionPerformed

    private void aboutMnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aboutMnActionPerformed
        // TODO add your handling code here:
        Help helpwindow = new Help();
        helpwindow.show();
    }//GEN-LAST:event_aboutMnActionPerformed

    private void checkoutroomnumFldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_checkoutroomnumFldKeyTyped
        // TODO add your handling code here:
        //validating input data
        char c = evt.getKeyChar();
        if(!Character.isDigit(c)){
            evt.consume();
            JOptionPane.showMessageDialog(this, "Only Integer values are accepted");
        }
        
    }//GEN-LAST:event_checkoutroomnumFldKeyTyped

    private void priceperdayFldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_priceperdayFldKeyTyped
        // TODO add your handling code here:
         //validating input data
        char c = evt.getKeyChar();
        if(!Character.isDigit(c)){
            evt.consume();
            JOptionPane.showMessageDialog(this, "Only Integer values are accepted");
        }
    }//GEN-LAST:event_priceperdayFldKeyTyped

    //refresh available room and non available room
    public void refresh() {
        int rowCount = roomtable.getRowCount();
        for (int i = 0; i < rowCount; i++) {
            if (roomtable.getValueAt(i, 4).equals("Available")) {
                String thisroomnum = (String) roomtable.getValueAt(i, 0);
                checkinroomnumCb.addItem(thisroomnum);
            }
        }
    }
    //get selected radio button value
    String getGender(){
            if(maleRb.isSelected()){
                return "Male";
            }
            else if(femaleRb.isSelected()){
                return "Female";
            }
            else if(otherRb.isSelected()){
                return "Other";
            }
            else{
                return "";
            }
        }
    
    //get room details file
    public void roomdetails(){
    JFileChooser fileChooser = new JFileChooser();
        int response = fileChooser.showOpenDialog(null); //select file to open
        if (response == JFileChooser.APPROVE_OPTION) {
            File file = new File(fileChooser.getSelectedFile().getAbsolutePath());
            BufferedReader br;
            try {
                br = new BufferedReader(new FileReader(file));
                // get the first line
                // get the columns name from the first line
                // set columns name to the jtable model
                String firstLine = br.readLine().trim();
                String[] columnsName = firstLine.split(",");
                DefaultTableModel model = (DefaultTableModel) roomtable.getModel();
                model.setColumnIdentifiers(columnsName);

                // get lines from txt file
                Object[] tableLines = br.lines().toArray();

                // extratct data from lines
                // set data to jtable model
                for (int i = 0; i < tableLines.length; i++) {
                    String line = tableLines[i].toString().trim();
                    String[] dataRow = line.split(",");
                    model.addRow(dataRow);
                }
            } catch (Exception ex) {
                java.util.logging.Logger.getLogger(Homepage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
            }
        }
        }
    
    public void customerdetails(){
         JFileChooser fileChooser = new JFileChooser();
        int response = fileChooser.showOpenDialog(null); //select file to open
        if (response == JFileChooser.APPROVE_OPTION) {
            File file = new File(fileChooser.getSelectedFile().getAbsolutePath());
            BufferedReader br;
            try {
                br = new BufferedReader(new FileReader(file));
                // get the first line
                // get the columns name from the first line
                // set columns name to the jtable model
                String firstLine = br.readLine().trim();
                String[] columnsName = firstLine.split(",");
                DefaultTableModel model = (DefaultTableModel) customerdetailTbl.getModel();
                model.setColumnIdentifiers(columnsName);

                // get lines from txt file
                Object[] tableLines = br.lines().toArray();

                // extratct data from lines
                // set data to jtable model
                for (int i = 0; i < tableLines.length; i++) {
                    String line = tableLines[i].toString().trim();
                    String[] dataRow = line.split(",");
                    model.addRow(dataRow);
                }
            } catch (Exception ex) {
                java.util.logging.Logger.getLogger(Homepage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
            }

        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Homepage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Homepage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Homepage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Homepage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Homepage().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTabbedPane TabbedPane;
    private javax.swing.JMenuItem aboutMn;
    private javax.swing.JButton alloteroomBtn;
    private javax.swing.JTextField checkinDateFld;
    private javax.swing.JLabel checkinDateLbl;
    private javax.swing.JTextField checkinIDFld;
    private javax.swing.JLabel checkinIDLbl;
    private javax.swing.JLabel checkinLbl;
    private javax.swing.JPanel checkinPnl;
    private javax.swing.JTable checkinTbl;
    private javax.swing.JScrollPane checkinTblSp;
    private javax.swing.JTextField checkinaddrFld;
    private javax.swing.JLabel checkinaddrLbl;
    private javax.swing.JComboBox<String> checkinbedCb;
    private javax.swing.JLabel checkinbedLbl;
    private javax.swing.JButton checkinclearBtn;
    private javax.swing.JTextField checkindateFld;
    private javax.swing.JLabel checkindateLbl;
    private javax.swing.JTextField checkinemailFld;
    private javax.swing.JLabel checkinemailLbl;
    private javax.swing.JLabel checkingenderLbl;
    private javax.swing.JTextField checkinmobnumFld;
    private javax.swing.JLabel checkinmobnumLbl;
    private javax.swing.JTextField checkinnameFld;
    private javax.swing.JLabel checkinnameLbll;
    private javax.swing.JTextField checkinnationalityFld;
    private javax.swing.JLabel checkinnationalityLbl;
    private javax.swing.JTextField checkinpriceFld;
    private javax.swing.JLabel checkinpriceLbl;
    private javax.swing.JComboBox<String> checkinroomCb;
    private javax.swing.JLabel checkinroomLbl;
    private javax.swing.JComboBox<String> checkinroomnumCb;
    private javax.swing.JLabel checkinroomnumLbl;
    private javax.swing.JButton checkoutBtn;
    private javax.swing.JTextField checkoutDateFld;
    private javax.swing.JLabel checkoutDateLbl;
    private javax.swing.JLabel checkoutLbl;
    private javax.swing.JPanel checkoutPnl;
    private javax.swing.JTextField checkoutcustomernameFld;
    private javax.swing.JLabel checkoutcustomernameLbl;
    private javax.swing.JTextField checkoutmobnumFld;
    private javax.swing.JLabel checkoutmobnumLbl;
    private javax.swing.JTextField checkoutroomnumFld;
    private javax.swing.JLabel checkoutroomnumLbl;
    private javax.swing.JButton clearBtn;
    private javax.swing.JPanel customerPnl;
    private javax.swing.JButton customercheckinBtn;
    private javax.swing.JButton customercheckoutBtn;
    private javax.swing.JLabel customerdetLbl;
    private javax.swing.JTable customerdetailTbl;
    private javax.swing.JMenuItem customerdetailsMn;
    private javax.swing.JButton customerdetsBtn;
    private javax.swing.JScrollPane custoomerdetailTableSp;
    private javax.swing.JTextField daysstayedFld;
    private javax.swing.JLabel daysstayedLbl;
    private javax.swing.JTextField emailFld;
    private javax.swing.JLabel emailLbl;
    private javax.swing.JButton exitBtn;
    private javax.swing.JMenuItem exitMn;
    private javax.swing.JRadioButton femaleRb;
    private javax.swing.JMenu fileMn;
    private javax.swing.ButtonGroup genderBg;
    private javax.swing.JMenu helpMn;
    private javax.swing.JLabel mainmenuLbl;
    private javax.swing.JRadioButton maleRb;
    private javax.swing.JButton manageBtn;
    private javax.swing.JLabel manageLbl;
    private javax.swing.JPanel managePnl;
    private javax.swing.JMenuBar menubar;
    private javax.swing.JMenu openMn;
    private javax.swing.JRadioButton otherRb;
    private javax.swing.JPanel portalPnl;
    private javax.swing.JTextField priceperdayFld;
    private javax.swing.JLabel priceperdayLbl;
    private javax.swing.JMenuItem roomdetailsMn;
    private javax.swing.JButton roomsearchBtnbynumber;
    private javax.swing.JButton roomsearchBtnbyprice;
    private javax.swing.JTextField roomsearchFld;
    private javax.swing.JTable roomtable;
    private javax.swing.JScrollPane roomtableSp;
    private javax.swing.JTextField searchbycheckoutdateFld;
    private javax.swing.JLabel searchbycheckoutdateLbl;
    private javax.swing.JLabel searchbypriceLbl;
    private javax.swing.JButton searchcustomerBtn;
    private javax.swing.JTextField totalamountFld;
    private javax.swing.JLabel totalamountLbl;
    // End of variables declaration//GEN-END:variables
}
